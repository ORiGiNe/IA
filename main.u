requireFile("core/Sonar.u");
requireFile("core/Radar.u");
requireFile("core/FLogger.u");
requireFile("core/Bot.u");
requireFile("core/IA.u");
requireFile("core/RTag.u");

requireFile("config.u");

//var gaop = UGaop.new(tty);

// le bot
var bot = Bot.new(0,0,0,"R")|

var e = Event.new;

// l'IA
var ia = IA.new(bot,e);


/* Les différents tag que l'on va utiliser.
 * On rajoute un slot "done". On s'en sevira pour indiquer si le tag est
 * arriver à la fin de son exécution ou s'il a été stopé en cours de route
 */

var ia.main_t = Tag.new("main")|

var ia.poussoirs_t = RTag.new("poussoirs")|
var ia.goBack_t = RTag.new("goBack")|
var ia.goBackInv_t = RTag.new("goBackInv")|
var ia.cross_t = RTag.new("cross")|


// les différentes actions du bot

/* goBack
 *
 * Fait demie tour dans le sens des aiguilles d'une montre et ramène son magot
 */
function ia.goBack {
    do (_bot) {
        if (_y > 126) {
            // on se ramène dans le bonne axe
            setAngle(0);
            forwardAtX(236);
        };

        setAngle(-90);
        forwardAtY(50);
        rotate(-90);
        forwardAtX(75);
        rotate(-45);
        forwardAtX(30);
        forwardAtX(64);
    };

    goBack_t.done = true;
}|;


/* U
 *
 * On tente de faire tour de l'île (un U) pour rafler tous les CDs qui trainent
 * dans la mer (on est un peu écolo sur les bords). On part par la droite de l'île.
 */
function ia.goBackInv {
    do (_bot) {
		if (_y < 100) {
			setAngle(0);
	        forwardAtX(234);
    	    rotate(90);
        	forwardAtY(126);
	        rotate(45);
			forwardAtY(170);
		};

		setAngle(180);
        forwardAtX(64);
        rotate(90);
        forwardAtY(100);
        rotate(-45);
        forwardAtX(30);
        forwardAtX(64);
    };

    goBackInv_t.done = true;
}|;


/* Poussoirs
 *
 * Va pousser le poussoir le plus proche.
 *
 * Condition initiale : le bot doit être dans l'axe d'une des deux lignes
 * noires.
 */
function ia.poussoirs {
    do (_bot) {
        // on check très grossièrement où on est
        if (_x < 150) {
            // on est près du premier poussoirs
            setAngle(0);
            forwardAtX(64);
            rotate(90);
            forwardAtY(198)
        }
        else {
            // on est près du second poussoir
            if (_y < 126) {
                setAngle(0);
                forwardAtX(235);
                rotate(90);
                forwardAtY(170);
            };

            setAngle(180);
            forwardAtX(190);
            rotate(-90);
            forwardAtY(198);
        };
    };
    poussoirs_t.done = true;
}|;


function ia.cross {
	do (_bot) {
		var x;

		if (_x < 150)
			// on est à droite, on veut aller à gauche
			x = 235
		else
			// chemin inverse
			x = 75;

		if (_y < 100)
			// on passe par en haut
			forwardAtY(50, cross_t)
		else
			// on passe par en bas
			forwardAtY(170);

		setAngle(0);
		forwardAtX(x)
	};
	cross_t.done = true;
}|;


function ia.main {
	at (goBack_t.leave?) {
		if (!goBack_t.done) {
			current_t = Tag.new();
	
			for (4) {
		    	sleep(0.5s);
			    if (!goBack_t.done)
					current_t:
				    	goBack
			    else break;
			};

			if (!goBack_t.done)
				launch(goBackInv, goBackInv_t);
		
			goBack_t.done = true;
		}
	};


	at (goBackInv_t.leave?) {
		if (!goBackInv_t.done) {
			echo("débile mental ?");
        	current_t = Tag.new();
        
	        for (4) {
    	        sleep(0.5s);
        	    if (!goBackInv_t.done) {
            	    current_t:
                	    goBackInv;
	            }
    	        else break;
        	};

	        launch(goBack, goBack_t);
			goBackInv_t.done = true;
	    };
	};


	at (poussoirs_t.leave?) {
    	if (!poussoirs_t.done) {
        	current_t = Tag.new();
	        for (6) {
    	        sleep(0.5s);
        	    if (!poussoirs_t.done) {
            	    current_t:
                	    poussoirs;
	            }
    	        else break;
        	};

	        poussoirs_t.done = true;
    	};
	};


	at (cross_t.leave?)
		if (!cross_t.done)
			cross_t.done = true;


	alert = function { _bot.stop };
	_bot.rotate(45);
	_bot.forwardAtY(50);
	launch(goBackInv, goBackInv_t);
	launch(poussoirs, poussoirs_t);
	launch(cross, cross_t);
	launch(poussoirs, poussoirs_t);
	echo("x = " + _bot._x)|
	echo("y = " + _bot._y)|
}|;


var  start = true;

at (start) main_t: ia.main;
at (!start) { echo ("bite"); main_t.stop };

sleep(3);
start = false;
sleep(1);
start = true;
{sleep(4); echo("!!!!!!!!!!!!!!!!!!!"); e!};
{sleep(26); echo("===================="); e!};
