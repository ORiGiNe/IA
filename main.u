requireFile("core/Sonar.u");
requireFile("core/Radar.u");
requireFile("core/FLogger.u");
requireFile("core/Robot.u");

requireFile("config.u");

//var gaop = UGaop.new(tty);

//----------------------//
//          IA          //
//----------------------//

/* Toute l'IA est codé en supposant que le robot par de la zone rouge.
 * La fonction Robot.rotate permet de tourner à droite ou à gauche selon que
 * l'on est réellement dans la zone rouge ou dans la zone violette.
 */


// le robot
var robot = Robot.new(0,0,0,"R")|


/* Les différents tag que l'on va utiliser.
 * On rajoute un slot "done". On s'en sevira pour indiquer si le tag est
 * arriver à la fin de son exécution ou s'il a été stopé en cours de route
 */
var Tag.done = false|;

var group_t = Tag.new("group")|
var alones_t = Tag.new("alones")|
var poussoirs_t = Tag.new("poussoirs")|
var u_t = Tag.new ("U")|

// cette variable sera égal au tag en cours
var current_t|


// launch (action, tag);
function launch {
    var tag = call.evalArgAt(1);
    current_t = tag;
    echo ("c");
    current_t: call.evalArgAt(0);
    echo ("b");
    waituntil(tag.done);
    echo ("b");
}|;



// les différentes actions du robot


/* U
 *
 * On tente de faire tour de l'île (un U) pour rafler tous les CDs qui trainent
 * dans la mer (on est un peu écolo sur les bords). On part par la droite de l'île.
 */
function u {
    do (robot) {
        rotate(45);
        forwardAtY(50);
        rotate(-45);
        forwardAtX(234);
        rotate(90);
        forwardAtY(170);
        rotate(90);
        forwardAtX(63);
        rotate(90);
        forwardAtY(100);
        rotate(-45);
        forwardAtX(30);
    };

    u_t.done = true;
}|;

at (u_t.enter?) u_t.done = false;

at (u_t.leave?) {
    if (!u_t.done)
        echo ("J'vous déteste");
};


/* Poussoirs
 *
 * Va pousser le poussoir le plus proche.
 *
 * Condition initiale : le robot doit être dans l'axe d'une des deux lignes
 * noires.
 */
function poussoirs {
    do (robot) {
        // on check très grossièrement où on est
        if (_x < 150) {
            // on est près du premier poussoirs
            setAngle(0);
            forwardAtX(64);
            rotate(90);
            forwardAtY(198) |
            forwardAtY(300)
        }
        else {
            // on est près du second poussoir
            if (_y < 126) {
                setAngle(0);
                forwardAtX(235);
                rotate(90);
                forwardAtY(170);
            };

            setAngle(180);
            forwardAtX(190);
            rotate(-90);
            forwardAtY(198);
        };
    };
    poussoirs_t.done = true;
}|;

at (poussoirs_t.enter?) poussoirs_t.done = false;

at (poussoirs_t.leave?) {
    echo ("!!!!!!!!!!!!!!");
    if (!poussoirs_t.done) {
        echo ("not finish");
        current_t = Tag.new();
        for (6) {
            sleep(0.5s);
            echo ("FOOOOOOOOOOOOOOOOOOOOR");
            if (!poussoirs_t.done) {
                echo ("hop");
                current_t:
                    poussoirs;
            }
            else {echo ("on repart");
                break;}
        };

        poussoirs_t.done = true;
    };
};


// les 4 CDs du bas plus le premier poussoir
function group {
    current_t = group_t |
    group_t:
        do (robot) {
            forward(25);
            rotate(90);
            forward(50);
            rotate(90);
            forward(25);
        };
}|;


launch(u, u_t);
launch(poussoirs, poussoirs_t);
echo("========================");
echo("x = " + robot._x)|
echo("y = " + robot._y)|
robot.forwardAtY(50);
robot.rotate(-90);
robot.forwardAtX(235);
echo("x = " + robot._x)|
echo("y = " + robot._y)|
{sleep(3); {robot.stop (current_t)}},
{sleep(6); {robot.stop (current_t)}},
launch(poussoirs, poussoirs_t);
echo("x = " + robot._x)|
echo("y = " + robot._y)|

System.shutdown;
